{
    "collab_server" : "",
    "contents" : "# Coursera Data Science Specialization\n# Reproducible Research\n# Peer Assessment Project 1\n# Author: John James\n# Date: March 5, 2016\n# process.R\n\n###############################################################################################################################\n# INTRODUCTION\n#\n# It is now possible to collect a large amount of data about personal movement using activity monitoring \n# devices such as a Fitbit, Nike Fuelband, or Jawbone Up. This script performs an exploratory analysis of personal activity\n# data to ascrtain patterns of behavior.\n#\n#\n# QUESTION\n#\n# This analysis processes personal activity data obtained from a group  of anonymous individuals, collected on 5 minute intervals over the\n# two month period from October thru November 2012.  This analysis seeks to address the following questions:\n#\n# 1. What is mean total number of steps taken per day?\n# 2. What is the average daily activity pattern?\n# 3. How do these observations change with imputed data?\n# 4. Are there differences in activity patterns between weekdays and weekends?\n#\n#\n# DATA\n#\n# This project makes use of data from a personal activity monitoring device. This device collects data at \n# 5 minute intervals through out the day. The data consists of two months of data from an anonymous individual \n# collected during the months of October and November, 2012 and include the number of steps taken in 5 minute \n# intervals each day\n#\n# The data for this assignment was downloaded from the course web site: https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip\n#\n# The variables included in this dataset are:\n#   steps: Number of steps taking in a 5-minute interval (missing values are coded as NA)\n#   date: The date on which the measurement was taken in YYYY-MM-DD format\n#   interval: Identifier for the 5-minute interval in which measurement was taken\n#\n# The dataset is stored in a comma-separated-value (CSV) file and there are a total of 17,568 observations in this dataset.\n#\n#\n# ORGANIZATION\n#\n# The files for the analysis are organized as follows:\n#   Data\n#     - Raw Data - Data obtained from the course website.  This data has been read only and has not been manipulated\n#     - Processed Data - Data with missing values imputed \n#   Figure\n#     - Exploratory Figures - Figures used for exploratory analysis \n#     - Final Figures - Figures included in the final analysis\n#   Code\n#     - Raw Scripts - scripts used for experimentation purposes that are not considered final\n#     - Final Scripts - final versions of scripts used for this analysis.  The scripts used are as follows\n#           - load.R - functions used to load the raw and processed data into the environment\n#           - func.R - functions used to analyze the data\n#           - process.R - master script that runs the analysis from beginning to end \n#     - R Markdown - Markdown files used to report the analysis of the project\n#   Text\n#     - Text of the analysis / report\n#\n#\n# EXPLORATORY ANALYSIS\n#\n# The script has been organized as follows. \n#     0.  User Instructions - Information required by the script from the user  \n#     1.  Housekeeping - Initializes working directories, sources files, and indicates which parts of the analysis is to be performed.\n#     2.  Load Data - Load the raw data into the environment \n#     3.  Mean Total - Calculates mean total steps per day and produces a histogram\n#     4.  Activity Pattern - Prepares a time series of activity, in terms of steps per day for each 5 minute interval\n#     5.  Impute Values - Missing values are replaced by the average number of steps per day across all days for the missing time interval\n#     6.  Comparison - Compared density, histogram and box plots for the raw and processed data are prepared \n#     7.  Weekend/Weekday - Time series line charts are prepared for both weekday and weekends.\n#\n# Here we go!\n##################################################################################################################################\n\n\n\n\n#############################################################################\n##                            USER INSTRUCTIONS                            ##\n#############################################################################\n# ---- initialize\n# Step 1: Working Directory\n# Note: This script assumes that your current working directory is your project home directory.  If you haven't \n# already done so, set your working directory accordingly.  All subordinate data and figure directories will be created \n# for you.  If using R Studio, you may set your working directory as follows: \n#           Go to menu bar\n#           Click \"Sessions\"\n#           Select \"Set Working Directory\"\n#\n# sTEP 2: Select Process Steps\n# Please select the process steps you wish to execute.  The default is that all processing steps will be executed.  To \n# skip a process, set the flag to FALSE.  Note, that each process depends upon the prior process having been executed at\n# least once.  \n#\n  loadData = TRUE\n  meanAnalysis = TRUE\n  activityPattern = TRUE\n  imputeData = TRUE\n  compare = TRUE\n  wdAnalysis = TRUE\n#\n# Step 3: Set data directory, URL for the data source, and file names\n#\n  dataUrl <- \"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip\"   # Link to data source\n  rawDataDir      <- \"/Data/Raw Data\"     # Directory where raw data is to be stored \n  dataZipFile     <- \"activity.zip\"       # Name of zip file (get this from the data source code book)\n  dataCsvFile     <- \"activity.csv\"       # Name of csv file (get this from the data source code book)\n  procDataFrame   <- \"procActivities\"     # Name of data frame in which the processed data is stored\n#\n#\n# Step 4: Is this exploratory or final analysis\n#  This determines the directories from which, scripts will be sourced and figures will be placed.\n  exploratory = FALSE\n# ---- end\n\n  \n#############################################################################\n##                              HOUSEKEEPING                               ##\n#############################################################################\n# ---- housekeeping\n\n# Store project top level working directory in the global environment\nhomeDir <- getwd()\nSys.setenv(\"PROJ_HOME\"= homeDir)\n\n# Set directory from which scripts will be sourced, then source them\n#if (exploratory) {scriptDir <- \"/Code/Raw Scripts\" } else {scriptDir <- \"/Code/Final Scripts\" }\n#setwd(file.path(homeDir, scriptDir))\n\n# Load custom functions files\nsource(\"func.R\")\nsource(\"load.R\")\n\n# Set figure directory to which figures will be placed.\nif (exploratory) {figDir  <- \"/Figure/Exploratory Figures\" } else {figDir <- \"/Figure/Final Figures\" }\n\n# Include requisite libraries\nlibrary(ggplot2)\nlibrary(plyr)\nlibrary(dplyr)\nlibrary(gridExtra)\nlibrary(grid)\nlibrary(downloader)\n# ---- end\n\n#############################################################################\n##                                LOAD DATA                                ##\n#############################################################################\n# ---- loadDataCall\n# Load raw data \nif (loadData) {\n\n  rawActivities <- loadZipData(dataUrl, rawDataDir, dataZipFile, dataCsvFile)\n}\n# ---- end\n#############################################################################\n##                    MEAN TOTAL NUMBER OF STEPS PER DAY                   ##\n#############################################################################\n\nif (meanAnalysis){\n  \n# ---- completeCases\n  # Extract complete cases from activities\n  completeCases <- rawActivities[complete.cases(rawActivities),]\n# ---- end\n  \n# ---- stepsByDay01Call\n  # Summarizes activitities into steps by date\n  stepsByDay01 <- summate(x = completeCases, v = \"date\", f = \"sum\")\n# ---- end\n\n# ---- computeStats01Call\n  # Compute and store summary statistics of total steps per day\n  stats01 <- computeStats(stepsByDay01)\n# ---- end\n  \n# ---- makeHist01Call\n  # Prepare, render and return histogram and summary statistics of total number of steps taken each day\n  stepsHist01 <- makeHist(stepsByDay01, stats01)\n# ---- end\n  \n# Store histogram in appropriate figures folder. \n  plotFile <- \"stepsHist01.png\"\n  plotSave(stepsHist01, plotFile)\n \n}\n\n\n#############################################################################\n##                    AVERAGE DAILY ACTIVITY PATTERN                       ##\n#############################################################################\n\nif (activityPattern) {\n\n# ---- stepsByInterval01\n  # Summarize activities into average steps taken per 5 minute interval\n  stepsByInterval01 <- summate(completeCases, \"interval\", \"mean\")\n# ---- end\n\n# ----   makeTimeSeriesCall\n  # Prepare, render and return time series plot of steps taken per interval\n  stepTimeSeries01 <- makeTimeSeries(stepsByInterval01)\n# ---- end  \n  # Store line chart in approprite figures folder\n  plotFile <- \"stepTimeSeries01.png\"\n  plotSave(stepTimeSeries01, plotFile)\n\n\n}\n\n#############################################################################\n##                    IMPUTING MISSING VALUES                              ##\n#############################################################################\n\nif (imputeData) {\n\n# ---- missingValues  \n  # Calculate and report the total number of missing values in the dataset\n  missingValues <- sum(is.na(rawActivities$steps))\n  print(paste(\"There are\",missingValues,\"rows with NAs in the steps variable\"))\n# ---- end\n\n# ----  imputeCall\n  # Create a new activities data set with the missing values filled in.\n  procActivities <- impute(rawActivities, stepsByInterval01, \"procActivities.csv\")\n# ---- end\n\n# ---- stepsByDay02\n  # Summarizes activitities into steps by date\n  stepsByDay02 <- summate(x = procActivities, v = \"date\", f = \"sum\")\n# ---- end\n  \n# ---- computeStatsCall  \n  #Compute and store summary statistics of total steps per day\n  stats02 <- computeStats(stepsByDay02)\n# ---- end\n  \n# ----   stepsHist02\n  # Prepare, render and return histogram of total number of steps taken each day\n  stepsHist02 <- makeHist(stepsByDay02, stats02)\n# ---- end\n  \n  # Store histogram in appropriate figures folder\n  plotFile <- \"stepsHist02.png\"\n  plotSave(stepsHist02, plotFile)\n\n}\n\n#############################################################################\n##                      DATA SET COMPARISON                                ##\n#############################################################################\n\nif (compare) {\n\n# ---- conjoinCall  \n  # Combine the raw and processed data frame into a single data frame with a new categorical variable for each row\n  # that identifies it as a raw or processed data.  All NA rows are removed. \n  combined <- conjoin(stepsByDay01, stepsByDay02)\n# ---- end  \n\n# ----  makeDensityPlotCall\n  # Prepare, render and return a density plot comparing distributions of the raw and processed data \n  density <- makeDensityPlot(combined)\n# ---- end\n\n\n  # Store the density plot in approprite figures folder\n  plotFile <- \"density.png\"\n  plotSave(density, plotFile)\n  \n# ---- makeOverlaidHistCall  \n  # Prepare, render and return a histogram plot comparing distributions of the raw and processed data \n  stepsHist03 <- makeOverlaidHist(combined)\n# ---- end\n  \n  # Store the histogram in approprite figures folder\n  plotFile <- \"stepHist03.png\"\n  plotSave(stepsHist03, plotFile)\n\n# ---- compareStatsCall    \n  # Compute the comparative difference in summary statistics of total steps per day between the raw and processed data\n  difference <- compareStats(stats01, stats02)\n# ---- end\n    \n# ---- makeBoxPlotCall  \n  # Prepare, render and return a boxplot comparing distributions of the raw and processed data \n  stepsBox <- makeBoxPlot(combined, difference)\n# ---- end\n  \n  # Store the boxpot in approprite figures folder\n  plotFile <- \"stepBox.png\"\n  plotSave(stepsBox, plotFile)\n\n}\n\n#############################################################################\n##                      WEEKEND/WEEKDAY PATTERN ANALYSIS                   ##\n#############################################################################\n\nif (wdAnalysis) {\n  \n# ---- dayLabelCAll\n  # Create a new Weekday / Weekend factor variable \n  procActivities <- dayLabel(procActivities)\n# ---- end\n\n# ---- summateWdCall\n  # Summarize the data by day label, and 5-Minute Interval Time\n  stepsByIntervalWd <- summateWd(procActivities)\n# ---- end\n  \n# ---- makeTimeSeriesWdCall\n    #Create comparative time-series \n  stepTimeSeriesWd <- makeTimeSeriesWd(stepsByIntervalWd)\n# ---- end\n  \n  # Store the time series in approprite figures folder\n  plotFile <- \"stepTimeSeriesWd.png\"\n  plotSave(stepTimeSeriesWd, plotFile)\n\n}",
    "created" : 1457250997356.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1524768660",
    "id" : "EC61CD46",
    "lastKnownWriteTime" : 1457281110,
    "last_content_update" : 1457281110272,
    "path" : "~/Dropbox/Online Learning/Data Science/Data Science Specialization/5. Reproducible Research/Week 1 Project/Code/Final Scripts/process.R",
    "project_path" : "Code/Final Scripts/process.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}